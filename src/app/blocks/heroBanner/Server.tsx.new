import React from 'react'
import './HeroBanner.css'
import { Media as MediaType } from '@/payload-types'
import Marquee from './Marquee'

interface HeroBannerProps {
  title: string
  description: string
  buttonText?: string
  buttonLink?: string
  bannerImage:
    | {
        id: string
        alt: string
        url: string
      }
    | MediaType
  showMarquee?: boolean
  marqueeGroup?: {
    marqueeLogos?: Array<{
      logo:
        | {
            id: string
            alt: string
            url: string
          }
        | MediaType
    }>
    marqueeText?: string
  }
}

export default function HeroBannerBlockServer({
  title,
  description,
  buttonText,
  buttonLink,
  bannerImage,
  showMarquee,
  marqueeGroup,
}: HeroBannerProps) {
  // Handle banner image
  const imageUrl =
    typeof bannerImage === 'object' && bannerImage?.url ? String(bannerImage.url) : ''
  const imageAlt =
    typeof bannerImage === 'object' && bannerImage?.alt ? String(bannerImage.alt) : ''

  // Extract marquee data from the group
  const marqueeLogos = marqueeGroup?.marqueeLogos || []
  const marqueeText = marqueeGroup?.marqueeText || ''

  // Log for debugging
  console.log('HeroBanner props:', {
    showMarquee,
    hasMarqueeGroup: !!marqueeGroup,
    marqueeLogosCount: marqueeLogos.length,
    marqueeText,
  })

  // Create the arrow SVG component
  const ArrowRight = () => (
    <svg width="16" height="14" viewBox="0 0 16 14" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M1.125 7H14.875"
        stroke="white"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M9.25 1.375L14.875 7L9.25 12.625"
        stroke="white"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  )

  // Prepare logos data for the Marquee component
  const logosData = marqueeLogos.map((item) => {
    const logo = item?.logo || {}
    return {
      url: typeof logo === 'object' && 'url' in logo && logo.url ? String(logo.url) : '',
      alt: typeof logo === 'object' && 'alt' in logo && logo.alt ? String(logo.alt) : '',
    }
  })

  return (
    <div className="hero-banner">
      <section className="sz-main-banner">
        <div className="sz-banner-content-wrap">
          <div className="sz-container sz-banner-container">
            <div className="sz-banner-content">
              <h1 className="sz-main-banner-title">{title}</h1>
              <p className="sz-main-banner-desc">{description}</p>
              {buttonText && buttonLink && (
                <a href={buttonLink} className="sz-btn sz-button-primary">
                  <div className="sz-button-wrap">
                    <span>{buttonText}</span>
                  </div>
                  <div className="sz-button-icon-wrap">
                    <ArrowRight />
                  </div>
                </a>
              )}
            </div>
            <div className="sz-banner-image-wrap">
              <img src={imageUrl} alt={imageAlt || ''} />
            </div>
          </div>
        </div>

        {showMarquee && logosData.length > 0 && (
          <Marquee 
            text={marqueeText} 
            logos={logosData}
          />
        )}
      </section>
    </div>
  )
}
